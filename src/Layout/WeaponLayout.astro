---
// --- PROPS ---
const { data } = Astro.props;
import MainLayout from "./MainLayout.astro";

const profile = data.weaponProfile;

const {
    title, image, aliases, status, type, manufacturer, cost, specialAbility,
    manufacturingIntel, tacticalAssessment, acquisitionIntel, fieldTestimonials, baseStats
} = profile;

// Helper function to normalize stat values for the visual bars (0-100 scale)
const normalizeStat = (stat, value) => {
    const maxValues = { attackSpeed: 15, damage: 1500, range: 300, reloadSpeed: 5, mods: 5 };
    if (stat === 'reloadSpeed') { // Invert for reload speed where lower is better
        return Math.max(0, (1 - (parseFloat(value) / maxValues[stat])) * 100);
    }
    return Math.min(100, (parseFloat(value) / maxValues[stat]) * 100);
};
---

<MainLayout>
    <div class="weapon-showcase-container">
        <!-- Add the new background and framing elements -->
        <div class="grid-background"></div>
        <div class="hud-frame top-left"></div>
        <div class="hud-frame top-right"></div>
        <div class="hud-frame bottom-left"></div>
        <div class="hud-frame bottom-right"></div>

        <!-- HERO SECTION -->
        <header class="showcase-header">
            <div class="header-main">
                <h1 data-text={title}>{title}</h1>
                <div class="aliases">
                    {aliases.join(' // ')}
                </div>
            </div>
             <div class="special-ability-block">
                <p>{specialAbility}</p>
            </div>
        </header>

        <!-- VISUAL & STATS SECTION -->
        <section class="visuals-section">
            <div class="showcase-hero">
                <img src={image} alt={`Showcase image of ${title}`} />
            </div>
            <div class="stats-container">
                <h3>PERFORMANCE METRICS</h3>
                <div class="stats-grid">
                    {Object.entries(baseStats).map(([key, value]) => {
                        const label = key.replace(/([A-Z])/g, ' $1').toUpperCase();
                        const percentage = normalizeStat(key, value);
                        return (
                             <div class="stat-item">
                                <span class="stat-label">{label}</span>
                                <div class="stat-bar-bg">
                                    <div class="stat-bar-fill" style={`width: ${percentage}%`}></div>
                                </div>
                                <span class="stat-value">{value}{key === 'range' ? 'm' : ''}{key === 'reloadSpeed' ? 's' : ''}</span>
                            </div>
                        )
                    })}
                </div>
            </div>
        </section>

        <!-- TACTICAL GRID SECTION -->
        <div class="tactical-grid">
            <!-- COLUMN 1: ACQUISITION & INTEL -->
            <div class="grid-column">
                 <div class="data-block">
                    <h3>ACQUISITION INTEL</h3>
                    <h4>MARKET AVAILABILITY</h4>
                    <p>{acquisitionIntel.marketAvailability}</p>
                    <h4>RUMORED LOCATION</h4>
                    <p>{acquisitionIntel.rumoredLocation}</p>
                    <div class="cost-block">
                        <h4>Est. Black Market Cost:</h4>
                        <span>{cost}</span>
                    </div>
                </div>
                <div class="data-block">
                    <h3>MANUFACTURING INTEL</h3>
                    <h4>CREATOR</h4>
                    <p>{manufacturingIntel.creator} - <em>{manufacturingIntel.creatorReputation}</em></p>
                    <h4>DEVELOPMENT</h4>
                    <p>{manufacturingIntel.developmentHistory}</p>
                </div>
            </div>

            <!-- COLUMN 2: TACTICAL ANALYSIS -->
            <div class="grid-column">
                <div class="data-block">
                    <h3>TACTICAL ASSESSMENT</h3>
                    <div class="analysis-block">
                        <h4>STRENGTHS</h4>
                        <ul class="advantages-list strengths">
                            {tacticalAssessment.strengths.map(strength => <li>{strength}</li>)}
                        </ul>
                    </div>
                     <div class="analysis-block">
                        <h4>WEAKNESSES</h4>
                        <ul class="advantages-list weaknesses">
                            {tacticalAssessment.weaknesses.map(weakness => <li>{weakness}</li>)}
                        </ul>
                    </div>
                    <div class="analysis-block">
                        <h4>MASTERY ARCHETYPE</h4>
                        <p>{tacticalAssessment.masteryArchetype}</p>
                    </div>
                </div>
            </div>

            <!-- COLUMN 3: FIELD DATA -->
            <div class="grid-column">
                 <div class="data-block">
                    <h3>FIELD TESTIMONIALS</h3>
                    <div class="testimonial-log">
                        {fieldTestimonials.map(testimonial => (
                            <div class="log-entry">
                                <div class="log-header">
                                    <h4>OPERATOR: {testimonial.merc}</h4>
                                    <span class="log-rating">RATING: {testimonial.rating}</span>
                                </div>
                                <blockquote class="merc-feedback">
                                    {testimonial.feedback}
                                </blockquote>
                            </div>
                        ))}
                    </div>
                </div>
            </div>
        </div>
    </div>
</MainLayout>


<style>
    @import url('https://fonts.googleapis.com/css2?family=Rajdhani:wght@500;700&display=swap');

    :root {
        --cyber-yellow: #fcee0a;
        --cyber-cyan: #00f0ff;
        --cyber-red: #ef4444;
        --cyber-green: #22c55e;
        --background-dark: #0a0a0f;
        --text-light: #e1e1e1;
        --text-dark: #8c8c8c;
        --border-color: rgba(0, 240, 255, 0.2);
        --gray-600: #6b7280;
    }

    /* --- AESTHETIC: Main Container & Background --- */
    .weapon-showcase-container {
        font-family: 'Rajdhani', sans-serif;
        color: var(--text-light);
        max-width: 1800px;
        margin: 0 auto;
        padding: 2rem 4rem;
        position: relative;
    }
    
    .grid-background {
        position: fixed; top: 0; left: 0;
        width: 100vw; height: 100vh;
        background-image:
            linear-gradient(rgba(0, 240, 255, 0.1) 1px, transparent 1px),
            linear-gradient(90deg, rgba(0, 240, 255, 0.1) 1px, transparent 1px);
        background-size: 50px 50px;
        animation: pan 60s linear infinite;
        z-index: -1;
    }
    @keyframes pan { 0% { background-position: 0 0; } 100% { background-position: 1200px 600px; } }
    
    .hud-frame {
        position: fixed; width: 40px; height: 40px;
        border-color: var(--cyber-cyan); opacity: 0.4;
        pointer-events: none; z-index: 10;
    }
    .top-left { top: 1.5rem; left: 1.5rem; border-top: 2px solid; border-left: 2px solid; }
    .top-right { top: 1.5rem; right: 1.5rem; border-top: 2px solid; border-right: 2px solid; }
    .bottom-left { bottom: 1.5rem; left: 1.5rem; border-bottom: 2px solid; border-left: 2px solid; }
    .bottom-right { bottom: 1.5rem; right: 1.5rem; border-bottom: 2px solid; border-right: 2px solid; }

    /* --- AESTHETIC: Glitchy Header --- */
    .showcase-header { text-align: center; margin-bottom: 3rem; }
    .showcase-header h1 {
        font-size: 7rem; font-weight: 700;
        color: var(--cyber-yellow); text-transform: uppercase;
        letter-spacing: 5px; text-shadow: 0 0 20px var(--cyber-yellow);
        margin: 0; line-height: 1; position: relative;
    }
    /* Glitch Effect */
    .showcase-header h1::before, .showcase-header h1::after {
        content: attr(data-text); position: absolute;
        top: 0; left: 0; width: 100%; height: 100%;
        background: var(--background-dark); overflow: hidden;
    }
    .showcase-header h1::before {
        left: 3px; text-shadow: -2px 0 var(--cyber-red);
        animation: glitch-1 2s linear infinite reverse;
    }
    .showcase-header h1::after {
        left: -3px; text-shadow: -2px 0 var(--cyber-cyan);
        animation: glitch-2 2s linear infinite reverse;
    }
    @keyframes glitch-1 { 0%, 10%, 22%, 75%, 100% { clip: rect(auto, auto, auto, auto); } 11% { clip: rect(35px, 9999px, 99px, 0); } 42% { clip: rect(42px, 9999px, 112px, 0); } 88% { clip: rect(32px, 9999px, 123px, 0); } }
    @keyframes glitch-2 { 0%, 15%, 32%, 85%, 100% { clip: rect(auto, auto, auto, auto); } 16% { clip: rect(10px, 9999px, 99px, 0); } 33% { clip: rect(80px, 9999px, 66px, 0); } 89% { clip: rect(40px, 9999px, 78px, 0); } }

    .aliases { font-size: 1.2rem; color: var(--text-dark); text-transform: uppercase; letter-spacing: 3px; margin: 1rem 0; }
    .special-ability-block {
        max-width: 80ch; margin: 1.5rem auto 0 auto; padding: 1rem; font-size: 1.2rem;
        font-style: italic; line-height: 1.6; color: var(--cyber-cyan);
        background: rgba(0, 240, 255, 0.05); border: 1px solid var(--border-color);
        clip-path: polygon(0 0, 100% 0, calc(100% - 15px) 100%, 15px 100%);
    }
    .special-ability-block p { margin: 0; }

    /* --- VISUALS & STATS --- */
    .visuals-section { display: grid; grid-template-columns: 1.5fr 1fr; gap: 3rem; margin-bottom: 4rem; align-items: center; }
    .showcase-hero img {
        width: 100%; max-height: 450px; object-fit: contain;
        filter: drop-shadow(0 0 30px rgba(0, 240, 255, 0.4));
        animation: float 6s ease-in-out infinite;
    }
    @keyframes float { 0%, 100% { transform: translateY(0); } 50% { transform: translateY(-15px); } }
    .stats-container {
        padding: 2rem; background: rgba(10, 10, 15, 0.3);
        border: 1px solid var(--border-color);
        clip-path: polygon(15px 0, 100% 0, 100% 100%, 0 100%, 0 15px);
        position: relative;
    }
    .stats-container::before {
        content: 'SCANNING...'; position: absolute; top: 0; left: 0;
        width: 100%; height: 2px; background: var(--cyber-cyan);
        box-shadow: 0 0 10px var(--cyber-cyan);
        animation: scanline 4s linear infinite;
    }
    @keyframes scanline { 0% { top: 0; } 100% { top: 100%; } }
    
    h3 { font-size: 1.5rem; text-transform: uppercase; letter-spacing: 2px; color: var(--text-light); margin: 0 0 1.5rem 0; }
    .stats-grid { display: flex; flex-direction: column; gap: 1.25rem; }
    .stat-item { display: grid; grid-template-columns: 140px 1fr 80px; align-items: center; gap: 1rem; }
    .stat-label { font-size: 1rem; color: var(--text-dark); text-transform: uppercase; }
    .stat-bar-bg { background-image: linear-gradient(45deg, rgba(0,0,0,0.5) 25%, transparent 25%, transparent 50%, rgba(0,0,0,0.5) 50%, rgba(0,0,0,0.5) 75%, transparent 75%, transparent); background-size: 10px 10px; border: 1px solid var(--gray-600); height: 8px; }
    .stat-bar-fill { background: var(--cyber-cyan); height: 100%; box-shadow: 0 0 8px var(--cyber-cyan); }
    .stat-value { font-size: 1.1rem; font-weight: 700; text-align: right; }

    /* --- TACTICAL GRID --- */
    .tactical-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 3rem; }
    .data-block { 
        margin-bottom: 2.5rem; padding: 1.5rem; 
        background: rgba(10, 10, 15, 0.2); 
        border: 1px solid var(--border-color);
        transition: background 0.3s ease;
    }
    .data-block:hover { background: rgba(0, 240, 255, 0.05); }
    
    h4 {
        font-size: 1.2rem; text-transform: uppercase; color: var(--cyber-cyan); letter-spacing: 1px;
        margin: 0 0 1rem 0; border-bottom: 1px solid var(--border-color); padding-bottom: 0.5rem;
    }
    .data-block p { font-size: 1.1rem; line-height: 1.8; color: var(--text-dark); margin: 0; }
    .data-block em { color: var(--gray-600); font-size: 0.9em; }

    .advantages-list { list-style: none; padding: 0; margin: 0; }
    .advantages-list li {
        font-size: 1.1rem; line-height: 1.7;
        margin-bottom: 0.75rem; display: flex; align-items: flex-start;
        padding: 0.5rem; transition: background 0.2s ease;
    }
    .advantages-list li:hover { background: rgba(255,255,255,0.05); }
    .advantages-list li::before {
        font-size: 1.5rem; margin-right: 0.75rem; font-weight: 700;
        line-height: 1;
    }
    .strengths li::before { content: '+'; color: var(--cyber-green); }
    .weaknesses li::before { content: '-'; color: var(--cyber-red); }
    
    .cost-block { margin-top: 2rem; padding: 1rem; border: 1px solid var(--cyber-yellow); text-align: center; }
    .cost-block h4 { color: var(--text-dark); margin: 0; border: none;}
    .cost-block span { color: var(--cyber-yellow); font-size: 2rem; font-weight: 700; }

    .testimonial-log { display: flex; flex-direction: column; gap: 2rem; }
    .log-entry { border-left: 3px solid var(--cyber-yellow); padding-left: 1.5rem; position: relative; }
    .log-header { display: flex; justify-content: space-between; align-items: baseline; }
    .log-header h4 { margin: 0 0 1rem 0; color: var(--text-light); border: none; }
    .log-rating { color: var(--gray-600); font-weight: 700; }
    .merc-feedback {
        margin: 0; background: rgba(255, 255, 255, 0.03);
        padding: 1rem; font-style: italic; color: var(--text-dark);
        border: 1px solid var(--text-dark);
    }

    /* --- RESPONSIVE --- */
    @media (max-width: 1400px) { .tactical-grid { grid-template-columns: 1fr 1fr; } .grid-column:last-child { grid-column: 1 / -1; } }
    @media (max-width: 992px) { .visuals-section, .tactical-grid { grid-template-columns: 1fr; } }
</style>